// <auto-generated />
using System;
using DatingApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatingApp.API.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908165535_MemberEntityAdded")]
    partial class MemberEntityAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DatingApp.API.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DatingApp.API.Entities.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<DateTime>("Created")
                        .HasColumnType("DATETIME2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("DatingApp.API.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("PublicId")
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Photos", (string)null);
                });

            modelBuilder.Entity("DatingApp.API.Entities.Member", b =>
                {
                    b.HasOne("DatingApp.API.Entities.AppUser", "User")
                        .WithOne("Member")
                        .HasForeignKey("DatingApp.API.Entities.Member", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatingApp.API.Entities.Photo", b =>
                {
                    b.HasOne("DatingApp.API.Entities.Member", "Member")
                        .WithMany("Photos")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DatingApp.API.Entities.AppUser", b =>
                {
                    b.Navigation("Member")
                        .IsRequired();
                });

            modelBuilder.Entity("DatingApp.API.Entities.Member", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
